% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Simulate.GeneSequenceAlignments.R
\name{Simulate.GeneSequenceAlignments}
\alias{Simulate.GeneSequenceAlignments}
\title{Simulate.GeneSequenceAlignments: function to simulate a set of sequence alignments for a list of gene trees}
\usage{
Simulate.GeneSequenceAlignments(
  list.Simulated.Gene.Tree.Set,
  path.PathParentDir,
  numeric.Ratio,
  numeric.LocusLength,
  vector.BaseFrequencies
)
}
\arguments{
\item{list.Simulated.Gene.Tree.Set}{Multiphylo list containing all the gene trees}

\item{path.PathParentDir}{Path to parent directory used for simulations}

\item{numeric.Ratio}{Kappa parameter for HKY substitution model}

\item{numeric.LocusLength}{Length of each locus}

\item{vector.BaseFrequencies}{Vector of base equibrium frequencies, with names equal to the nucleotide state}
}
\description{
This function returns (1) a list of nexus alignments that have been simulated for the input gene trees
}
\examples{

################
# Load depends #
################
library(SpeciesTopoTestR)
library(ape)

########################################################
# Define species topologies for simulation and testing #
########################################################
handle.SpeciesTree1 <- read.tree(text = "(A:3,(B:2,(C:1,D:1):1):1);")
handle.SpeciesTree2 <- read.tree(text = "(A:3,(D:2,(C:1,B:1):1):1);")


##########################
# Simulate gene tree set #
##########################
handle.Simulated_GeneTrees_T1 <- Simulate.GeneTrees_From_SpeciesTree(handle.SpeciesTree = handle.SpeciesTree1,
                                                                     string.PathDir = '~/Desktop/',
                                                                     numeric.NumberOfGeneTrees = 3)
############################################
# Convert to mutation units branch lengths #
############################################
handle.Converted_GeneTrees_T1 <- list()
class(handle.Converted_GeneTrees_T1) <- "multiPhylo"

for (i in 1:length(handle.Simulated_GeneTrees_T1)){

  handle.Simulated_GeneTrees_T1_i <- handle.Simulated_GeneTrees_T1[[i]]
  handle.Simulated_GeneTrees_T1_i$edge.length = handle.Simulated_GeneTrees_T1_i$edge.length* 0.00005
  handle.Converted_GeneTrees_T1[[i]] <- handle.Simulated_GeneTrees_T1_i
}

################################
# Simulate sequence alignments #
################################
vector.pi <- c(0.3, 0.2, 0.2, 0.3)
names(vector.pi) <- c("A", "C", "G", "T")
list.SimulatedAlignments <- Simulate.GeneSequenceAlignments(list.Simulated.Gene.Tree.Set = handle.Converted_GeneTrees_T1,
                                                            path.PathParentDir = '~/Desktop/',
                                                            numeric.Ratio = 4.6,
                                                            numeric.LocusLength = 100,
                                                            vector.BaseFrequencies = vector.pi)
}
\keyword{bayesian}
\keyword{coalescent}
\keyword{empirical}
\keyword{estimation,}
\keyword{inference,}
\keyword{multispecies}
\keyword{species}
\keyword{tree}
